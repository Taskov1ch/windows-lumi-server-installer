name: Build Lumi Installer

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: python build.py --target exe

      - name: Build with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python build.py --target linux
          chmod +x dist/LumiInstaller

      - name: Rename artifact
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/LumiInstaller.exe dist/LumiInstaller-Windows.exe
          else
            mv dist/LumiInstaller dist/LumiInstaller-Linux
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LumiInstaller-${{ matrix.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Get version from config
        id: get_version
        run: |
          VERSION=$(python get_version.py)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: (Optional) Fix permissions
        run: chmod +x dist/**/LumiInstaller-Linux || true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: v${{ steps.get_version.outputs.VERSION }}
          body: |
            Release built from commit: ${{ github.sha }}

            Changes:
            ${{ github.event.head_commit.message }}
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
